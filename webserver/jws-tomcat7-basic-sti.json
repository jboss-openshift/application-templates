{
    "kind": "Template",
    "apiVersion": "v1beta1",
    "metadata": {
        "annotations": {
            "iconClass" : "tomcat",
            "description": "Application template for JWS applications built using STI."
        },
        "name": "jws-tomcat7-basic-sti"
    },
    "labels": {
        "template": "jws-tomcat7-basic-sti"
    },
    "parameters": [
        {
            "description": "JWS Release version, e.g. 3.0, 2.1, etc.",
            "name": "JWS_RELEASE",
            "value": "3.0"
        },
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "jws-app"
        },
        {
            "description": "Hostname for service routes",
            "name": "APPLICATION_HOSTNAME",
            "value": "jws-app.local"
        },
        {
            "description": "Git source URI for application",
            "name": "GIT_URI"
        },
        {
            "description": "Git branch/tag reference",
            "name": "GIT_REF",
            "value": "master"
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "GIT_CONTEXT_DIR",
            "value": ""
        },
        {
            "description": "Github trigger secret",
            "name": "GITHUB_TRIGGER_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        },
        {
            "description": "Generic build trigger secret",
            "name": "GENERIC_TRIGGER_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression"
        },
        {
            "description": "The name of the secret containing the certificate files",
            "name": "JWS_HTTPS_SECRET",
            "value": "jws-app-secret"
        },
        {
            "description": "The name of the certificate file within the secret",
            "name": "JWS_HTTPS_CERTIFICATE",
            "value": "server.crt"
        },
        {
            "description": "The name of the certificate key file within the secret",
            "name": "JWS_HTTPS_CERTIFICATE_KEY",
            "value": "server.key"
        },
        {
            "description": "The certificate password",
            "name": "JWS_HTTPS_CERTIFICATE_PASSWORD",
            "value": ""
        }
    ],
    "items": [
        {
            "kind": "Service",
            "apiVersion": "v1beta3",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-http-service",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1beta3",
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-https-service",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's https port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1beta1",
            "id": "${APPLICATION_NAME}-http-route",
            "metadata": {
                "name": "${APPLICATION_NAME}-http-route",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "host": "${APPLICATION_HOSTNAME}",
            "serviceName": "${APPLICATION_NAME}-http-service"
        },
        {
            "kind": "Route",
            "apiVersion": "v1beta1",
            "id": "${APPLICATION_NAME}-https-route",
            "metadata": {
                "name": "${APPLICATION_NAME}-https-route",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's https service."
                }
            },
            "host": "${APPLICATION_HOSTNAME}",
            "serviceName": "${APPLICATION_NAME}-https-service",
            "tls": {
                "termination" : "passthrough"
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1beta1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1beta1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "triggers": [
                {
                    "type": "github",
                    "github": {
                        "secret": "${GITHUB_TRIGGER_SECRET}"
                    }
                },
                {
                    "type": "generic",
                    "generic": {
                        "secret": "${GENERIC_TRIGGER_SECRET}"
                    }
                },
                {
                    "type": "imageChange",
                    "imageChange": {
                        "image": "registry.access.redhat.com/jboss-webserver-3/tomcat7-openshift:${JWS_RELEASE}",
                        "from": {
                            "name": "jboss-webserver3-tomcat7-openshift"
                        },
                        "tag": "${JWS_RELEASE}"
                    }
                }
            ],
            "parameters": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${GIT_URI}",
                        "ref": "${GIT_REF}"
                    },
                    "contextDir":"${GIT_CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "STI",
                    "stiStrategy": {
                        "from": {
                            "name": "jboss-webserver3-tomcat7-openshift"
                        },
                        "tag": "${JWS_RELEASE}",
                        "clean": true
                    }
                },
                "output": {
                    "to": {
                        "name": "${APPLICATION_NAME}"
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1beta1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "triggers": [
                {
                    "type": "ImageChange",
                    "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                            "${APPLICATION_NAME}"
                        ],
                        "from": {
                            "name": "${APPLICATION_NAME}"
                        },
                        "tag": "latest"
                    }
                }
            ],
            "template": {
                "strategy": {
                    "type": "Recreate"
                },
                "controllerTemplate": {
                    "replicas": 1,
                    "replicaSelector": {
                        "deploymentConfig": "${APPLICATION_NAME}"
                    },
                    "podTemplate": {
                        "desiredState": {
                            "manifest": {
                                "version": "v1beta1",
                                "containers": [
                                    {
                                        "name": "${APPLICATION_NAME}",
                                        "image": "${APPLICATION_NAME}",
                                        "imagePullPolicy": "PullAlways",
                                        "volumeMounts": [
                                            {
                                                "name": "jws-certificate-volume",
                                                "mountPath": "/etc/jws-secret-volume",
                                                "readOnly": true
                                            }
                                        ],
                                        "ports": [
                                            {
                                                "name": "${APPLICATION_NAME}-tcp-8080",
                                                "containerPort": 8080,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "name": "${APPLICATION_NAME}-tcp-8443",
                                                "containerPort": 8443,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "env": [
                                            {
                                                "name": "JWS_HTTPS_CERTIFICATE_DIR",
                                                "value": "/etc/jws-secret-volume"
                                            },
                                            {
                                                "name": "JWS_HTTPS_CERTIFICATE",
                                                "value": "${JWS_HTTPS_CERTIFICATE}"
                                            },
                                            {
                                                "name": "JWS_HTTPS_CERTIFICATE_KEY",
                                                "value": "${JWS_HTTPS_CERTIFICATE_KEY}"
                                            },
                                            {
                                                "name": "JWS_HTTPS_CERTIFICATE_PASSWORD",
                                                "value": "${JWS_HTTPS_CERTIFICATE_PASSWORD}"
                                            }
                                        ]
                                    }
                                ],
                                "volumes": [
                                    {
                                        "name": "jws-certificate-volume",
                                        "source": {
                                            "secret": {
                                                "target": {
                                                    "kind": "Secret",
                                                    "name": "${JWS_HTTPS_SECRET}"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    }
                }
            }
        }
    ]
}
