{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for JDG 6.5 and MySQL applications with persistent storage.",
            "tags": "datagrid,jboss,xpaas",
            "version": "1.2.0"
        },
        "name": "datagrid65-mysql-persistent"
    },
    "labels": {
        "template": "datagrid65-mysql-persistent",
        "xpaas": "1.2.0"
    },
    "parameters": [
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "datagrid-app",
            "required": true
        },
        {
            "description": "Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "APPLICATION_DOMAIN",
            "value": "",
            "required": false
        },
        {
            "description": "The name of the secret containing the keystore file",
            "name": "JDG_HTTPS_SECRET",
            "value": "datagrid-app-secret",
            "required": true
        },
        {
            "description": "The name of the keystore file within the secret",
            "name": "JDG_HTTPS_KEYSTORE",
            "value": "keystore.jks",
            "required": false
        },
        {
            "description": "The name associated with the server certificate",
            "name": "JDG_HTTPS_NAME",
            "value": "",
            "required": false
        },
        {
            "description": "The password for the keystore and certificate",
            "name": "JDG_HTTPS_PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql",
            "name": "DB_JNDI",
            "value": "java:/jboss/datasources/mysql",
            "required": false
        },
        {
            "description": "Database name",
            "name": "DB_DATABASE",
            "value": "root",
            "required": true
        },
        {
            "description": "Database user name",
            "name": "DB_USERNAME",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Database user password",
            "name": "DB_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "DB_MIN_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "DB_MAX_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "DB_TX_ISOLATION",
            "required": false
        },
        {
            "description": "Sets how the table names are stored and compared.",
            "name": "MYSQL_LOWER_CASE_TABLE_NAMES",
            "required": false
        },
        {
            "description": "The maximum permitted number of simultaneous client connections.",
            "name": "MYSQL_MAX_CONNECTIONS",
            "required": false
        },
        {
            "description": "The minimum length of the word to be included in a FULLTEXT index.",
            "name": "MYSQL_FT_MIN_WORD_LEN",
            "required": false
        },
        {
            "description": "The maximum length of the word to be included in a FULLTEXT index.",
            "name": "MYSQL_FT_MAX_WORD_LEN",
            "required": false
        },
        {
            "description": "Controls the innodb_use_native_aio setting value if the native AIO is broken.",
            "name": "MYSQL_AIO",
            "required": false
        },
        {
            "description": "Size of persistent storage for database volume.",
            "name": "VOLUME_CAPACITY",
            "value": "512Mi",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Comma-separated list of connector types that should be configured (defaults to 'memcached,hotrod,rest')",
            "name": "INFINISPAN_CONNECTORS",
            "value": "hotrod,memcached,rest",
            "required": false
        },

        {
            "description": "The cache container used by the Hot Rod connector (defaults to 'clustered')",
            "name": "HOTROD_CACHE_CONTAINER",
            "value": "clustered",
            "required": true
        },
        {
            "description": "The socket binding port used by the Hot Rod connector (defaults to 'hotrod')",
            "name": "HOTROD_SOCKET_BINDING",
            "value": "hotrod",
            "required": true
        },
        {
            "description": "",
            "name": "HOTROD_NAME",
            "value": "",
            "required": false
        },
        {
            "description": "The number of worker threads available for the Hot Rod connector (defaults to 160)",
            "name": "HOTROD_WORKER_THREADS",
            "value": "",
            "required": false
        },
        {
            "description": "The time (in milliseconds) the connector can remain idle before the connection times out (defaults to -1 - no timeout)",
            "name": "HOTROD_IDLE_TIMEOUT",
            "value": "",
            "required": false
        },
        {
            "description": "Whether TCP packets will be delayed and sent out in batches (defaults to true)",
            "name": "HOTROD_TCP_NODELAY",
            "value": "",
            "required": false
        },
        {
            "description": "The size of the send buffer for the Hot Rod connector (defaults to size of the TCP stack buffer)",
            "name": "HOTROD_SEND_BUFFER_SIZE",
            "value": "",
            "required": false
        },
        {
            "description": "The size of the receive buffer for the Hot Rod connector (defaults to size of the TCP stack buffer)",
            "name": "HOTROD_RECEIVE_BUFFER_SIZE",
            "value": "",
            "required": false
        },

        {
            "description": "",
            "name": "TOPOLOGY_CACHE_SUFFIX",
            "value": "",
            "required": false
        },
        {
            "description": "The time (in milliseconds) after which the operation attempting to obtain a lock times out (defaults to 10 seconds)",
            "name": "TOPOLOGY_LOCK_TIMEOUT",
            "value": "",
            "required": false
        },
        {
            "description": "The time (in milliseconds) after which the replication operation times out (defaults to 10 seconds)",
            "name": "TOPOLOGY_REPLICATION_TIMEOUT",
            "value": "",
            "required": false
        },
        {
            "description": "The hostname sent by the Hot Rod server to clients listed in the topology information (defaults to the host address)",
            "name": "TOPOLOGY_EXTERNAL_HOST",
            "value": "",
            "required": false
        },
        {
            "description": "The port sent by the Hot Rod server to clients listed in the topology information (defaults to the configured port)",
            "name": "TOPOLOGY_EXTERNAL_PORT",
            "value": "",
            "required": false
        },
        {
            "description": "Whether the Hot Rod connector will carry out retrieval operations lazily (defaults to true)",
            "name": "TOPOLOGY_LAZY_RETRIEVAL",
            "value": "",
            "required": false
        },
        {
            "description": "Whether the initial state retrieval happens immediately at startup; applies only when TOPOLOGY_LAZY_RETRIEVAL is set to false (defaults to true)",
            "name": "TOPOLOGY_AWAIT_INITIAL_TRANSFER",
            "value": "",
            "required": false
        },

        {
            "description": "",
            "name": "AUTHENTICATION_SECURITY_REALM",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_SERVER_NAME",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_SECURITY_CONTEXT_NAME",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_MECHANISMS",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_QOP",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_STRENGTH",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_FORWARD_SECRECY",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_NO_ACTIVE",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_NO_ANONYMOUS",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_NO_DICTIONARY",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_NO_PLAIN_TEXT",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_POLICY_PASS_CREDENTIALS",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "SASL_PROPERTIES",
            "value": "",
            "required": false
        },

        {
            "description": "",
            "name": "ENCRYPTION_SECURITY_REALM",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "value": "",
            "required": false
        },

        {
            "description": "The cache container used by the memcached connector (defaults to 'clustered')",
            "name": "MEMCACHED_CACHE_CONTAINER",
            "value": "clustered",
            "required": true
        },
        {
            "description": "The name of the cache to expose through this memcached connector (defaults to 'default')",
            "name": "MEMCACHED_CACHE",
            "value": "default",
            "required": false
        },
        {
            "description": "The socked binding port used by the memcached connector (defaults to 'memcached')",
            "name": "MEMCACHED_SOCKET_BINDING",
            "value": "memcached",
            "required": true
        },
        {
            "description": "The name of this memcached connector (defaults to 'memcached')",
            "name": "MEMCACHED_NAME",
            "value": "memcached",
            "required": false
        },
        {
            "description": "The number of worker threads available for the memcached connector (defaults to 160)",
            "name": "MEMCACHED_WORKER_THREADS",
            "value": "",
            "required": false
        },
        {
            "description": "The time (in milliseconds) the connector can remain idle before the connection times out (defaults to -1 - no timeout)",
            "name": "MEMCACHED_IDLE_TIMEOUT",
            "value": "",
            "required": false
        },
        {
            "description": "Whether TCP packets will be delayed and sent out in batches (defaults to true)",
            "name": "MEMCACHED_TCP_NODELAY",
            "value": "",
            "required": false
        },
        {
            "description": "The size of the send buffer for the memcached connector (defaults to the size of the TCP stack buffer)",
            "name": "MEMCACHED_SEND_BUFFER_SIZE",
            "value": "",
            "required": false
        },
        {
            "description": "The size of the receive buffer for the memcached connector (defaults to the size of the TCP stack buffer)",
            "name": "MEMCACHED_RECEIVE_BUFFER_SIZE",
            "value": "",
            "required": false
        },

        {
            "description": "The virtual server used by the REST connector (defaults to 'default-host')",
            "name": "REST_VIRTUAL_SERVER",
            "value": "",
            "required": false
        },
        {
            "description": "The cache container used by the REST connector (defaults to 'clustered')",
            "name": "REST_CACHE_CONTAINER",
            "value": "clustered",
            "required": true
        },
        {
            "description": "The context path for the REST connector (defaults to '')",
            "name": "REST_CONTEXT_PATH",
            "value": "",
            "required": false
        },
        {
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint",
            "name": "REST_SECURITY_DOMAIN",
            "value": "",
            "required": false
        },
        {
            "description": "The method used to retrieve credentials for the REST endpoint (defaults to 'BASIC')",
            "name": "REST_AUTH_METHOD",
            "value": "",
            "required": false
        },
        {
            "description": "Whether authentication is required only for WRITE operations or for READ operations as well (defaults to 'READ_WRITE')",
            "name": "REST_SECURITY_MODE",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "REST_EXTENDED_HEADERS",
            "value": "",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's HTTP port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "secure-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's HTTPS port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11211,
                        "targetPort": 11211
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-memcached",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Memcached service for clustered applications."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11222,
                        "targetPort": 11222
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-hotrod",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Hot Rod service for clustered applications."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 3306,
                        "targetPort": 3306
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-mysql"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-mysql",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The database server's port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's HTTP service."
                }
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "metadata": {
                "name": "secure-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's HTTPS service."
                }
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-memcached",
            "metadata": {
                "name": "${APPLICATION_NAME}-memcached",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's memcached service."
                }
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "name": "${APPLICATION_NAME}-memcached"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-hotrod",
            "metadata": {
                "name": "${APPLICATION_NAME}-hotrod",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's hotrod service."
                }
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "name": "${APPLICATION_NAME}-hotrod"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}"
                            }
                        }
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "serviceAccount": "datagrid-service-account",
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "jboss-datagrid65-openshift",
                                "imagePullPolicy": "Always",
                                "volumeMounts": [
                                    {
                                        "name": "datagrid-keystore-volume",
                                        "mountPath": "/etc/datagrid-secret-volume",
                                        "readOnly": true
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "memcached",
                                        "containerPort": 11211,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "hotrod",
                                        "containerPort": 11222,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JDG_HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/datagrid-secret-volume"
                                    },
                                    {
                                        "name": "JDG_HTTPS_KEYSTORE",
                                        "value": "${JDG_HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "JDG_HTTPS_NAME",
                                        "value": "${JDG_HTTPS_NAME}"
                                    },
                                    {
                                        "name": "JDG_HTTPS_PASSWORD",
                                        "value": "${JDG_HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-mysql=DB"
                                    },
                                    {
                                        "name": "DB_JNDI",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "DB_USERNAME",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "TX_DATABASE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-mysql=DB"
                                    },
                                    {
                                        "name": "DB_MIN_POOL_SIZE",
                                        "value": "${DB_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_MAX_POOL_SIZE",
                                        "value": "${DB_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_TX_ISOLATION",
                                        "value": "${DB_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "HOTROD_CACHE_CONTAINER",
                                        "value": "${HOTROD_CACHE_CONTAINER}"
                                    },
                                    {
                                        "name": "HOTROD_SOCKET_BINDING",
                                        "value": "${HOTROD_SOCKET_BINDING}"
                                    },
                                    {
                                        "name": "HOTROD_NAME",
                                        "value": "${HOTROD_NAME}"
                                    },
                                    {
                                        "name": "HOTROD_WORKER_THREADS",
                                        "value": "${HOTROD_WORKER_THREADS}"
                                    },
                                    {
                                        "name": "HOTROD_IDLE_TIMEOUT",
                                        "value": "${HOTROD_IDLE_TIMEOUT}"
                                    },
                                    {
                                        "name": "HOTROD_TCP_NODELAY",
                                        "value": "${HOTROD_TCP_NODELAY}"
                                    },
                                    {
                                        "name": "HOTROD_SEND_BUFFER_SIZE",
                                        "value": "${HOTROD_SEND_BUFFER_SIZE}"
                                    },
                                    {
                                        "name": "HOTROD_RECEIVE_BUFFER_SIZE",
                                        "value": "${HOTROD_RECEIVE_BUFFER_SIZE}"
                                    },
                                    {
                                        "name": "TOPOLOGY_CACHE_SUFFIX",
                                        "value": "${TOPOLOGY_CACHE_SUFFIX}"
                                    },
                                    {
                                        "name": "TOPOLOGY_LOCK_TIMEOUT",
                                        "value": "${TOPOLOGY_LOCK_TIMEOUT}"
                                    },
                                    {
                                        "name": "TOPOLOGY_REPLICATION_TIMEOUT",
                                        "value": "${TOPOLOGY_REPLICATION_TIMEOUT}"
                                    },
                                    {
                                        "name": "TOPOLOGY_EXTERNAL_HOST",
                                        "value": "${TOPOLOGY_EXTERNAL_HOST}"
                                    },
                                    {
                                        "name": "TOPOLOGY_EXTERNAL_PORT",
                                        "value": "${TOPOLOGY_EXTERNAL_PORT}"
                                    },
                                    {
                                        "name": "TOPOLOGY_LAZY_RETRIEVAL",
                                        "value": "${TOPOLOGY_LAZY_RETRIEVAL}"
                                    },
                                    {
                                        "name": "TOPOLOGY_AWAIT_INITIAL_TRANSFER",
                                        "value": "${TOPOLOGY_AWAIT_INITIAL_TRANSFER}"
                                    },
                                    {
                                        "name": "AUTHENTICATION_SECURITY_REALM",
                                        "value": "${AUTHENTICATION_SECURITY_REALM}"
                                    },
                                    {
                                        "name": "SASL_SERVER_NAME",
                                        "value": "${SASL_SERVER_NAME}"
                                    },
                                    {
                                        "name": "SASL_SECURITY_CONTEXT_NAME",
                                        "value": "${SASL_SECURITY_CONTEXT_NAME}"
                                    },
                                    {
                                        "name": "SASL_MECHANISMS",
                                        "value": "${SASL_MECHANISMS}"
                                    },
                                    {
                                        "name": "SASL_QOP",
                                        "value": "${SASL_QOP}"
                                    },
                                    {
                                        "name": "SASL_STRENGTH",
                                        "value": "${SASL_STRENGTH}"
                                    },
                                    {
                                        "name": "SASL_POLICY_FORWARD_SECRECY",
                                        "value": "${SASL_POLICY_FORWARD_SECRECY}"
                                    },
                                    {
                                        "name": "SASL_POLICY_NO_ACTIVE",
                                        "value": "${SASL_POLICY_NO_ACTIVE}"
                                    },
                                    {
                                        "name": "SASL_POLICY_NO_ANONYMOUS",
                                        "value": "${SASL_POLICY_NO_ANONYMOUS}"
                                    },
                                    {
                                        "name": "SASL_POLICY_NO_DICTIONARY",
                                        "value": "${SASL_POLICY_NO_DICTIONARY}"
                                    },
                                    {
                                        "name": "SASL_POLICY_NO_PLAIN_TEXT",
                                        "value": "${SASL_POLICY_NO_PLAIN_TEXT}"
                                    },
                                    {
                                        "name": "SASL_POLICY_PASS_CREDENTIALS",
                                        "value": "${SASL_POLICY_PASS_CREDENTIALS}"
                                    },
                                    {
                                        "name": "SASL_PROPERTIES",
                                        "value": "${SASL_PROPERTIES}"
                                    },
                                    {
                                        "name": "ENCRYPTION_SECURITY_REALM",
                                        "value": "${ENCRYPTION_SECURITY_REALM}"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },

                                    {
                                        "name": "MEMCACHED_CACHE_CONTAINER",
                                        "value": "${MEMCACHED_CACHE_CONTAINER}"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${MEMCACHED_CACHE}"
                                    },
                                    {
                                        "name": "MEMCACHED_SOCKET_BINDING",
                                        "value": "${MEMCACHED_SOCKET_BINDING}"
                                    },
                                    {
                                        "name": "MEMCACHED_NAME",
                                        "value": "${MEMCACHED_NAME}"
                                    },
                                    {
                                        "name": "MEMCACHED_WORKER_THREADS",
                                        "value": "${MEMCACHED_WORKER_THREADS}"
                                    },
                                    {
                                        "name": "MEMCACHED_IDLE_TIMEOUT",
                                        "value": "${MEMCACHED_IDLE_TIMEOUT}"
                                    },
                                    {
                                        "name": "MEMCACHED_TCP_NODELAY",
                                        "value": "${MEMCACHED_TCP_NODELAY}"
                                    },
                                    {
                                        "name": "MEMCACHED_SEND_BUFFER_SIZE",
                                        "value": "${MEMCACHED_SEND_BUFFER_SIZE}"
                                    },
                                    {
                                        "name": "MEMCACHED_RECEIVE_BUFFER_SIZE",
                                        "value": "${MEMCACHED_RECEIVE_BUFFER_SIZE}"
                                    },

                                    {
                                        "name": "REST_VIRTUAL_SERVER",
                                        "value": "${REST_VIRTUAL_SERVER}"
                                    },
                                    {
                                        "name": "REST_CACHE_CONTAINER",
                                        "value": "${REST_CACHE_CONTAINER}"
                                    },
                                    {
                                        "name": "REST_CONTEXT_PATH",
                                        "value": "${REST_CONTEXT_PATH}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "REST_AUTH_METHOD",
                                        "value": "${REST_AUTH_METHOD}"
                                    },
                                    {
                                        "name": "REST_SECURITY_MODE",
                                        "value": "${REST_SECURITY_MODE}"
                                    },
                                    {
                                        "name": "REST_EXTENDED_HEADERS",
                                        "value": "${REST_EXTENDED_HEADERS}"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "datagrid-keystore-volume",
                                "secret": {
                                    "secretName": "${JDG_HTTPS_SECRET}"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}-mysql",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-mysql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "name": "mysql:latest"
                            }
                        }
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-mysql"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}-mysql",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}-mysql",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}-mysql",
                                "image": "mysql",
                                "imagePullPolicy": "Always",
                                "ports": [
                                    {
                                        "containerPort": 3306,
                                        "protocol": "TCP"
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/mysql/data",
                                        "name": "${APPLICATION_NAME}-mysql-pvol"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "MYSQL_USER",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "MYSQL_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "MYSQL_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "MYSQL_LOWER_CASE_TABLE_NAMES",
                                        "value": "${MYSQL_LOWER_CASE_TABLE_NAMES}"
                                    },
                                    {
                                        "name": "MYSQL_MAX_CONNECTIONS",
                                        "value": "${MYSQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "MYSQL_FT_MIN_WORD_LEN",
                                        "value": "${MYSQL_FT_MIN_WORD_LEN}"
                                    },
                                    {
                                        "name": "MYSQL_FT_MAX_WORD_LEN",
                                        "value": "${MYSQL_FT_MAX_WORD_LEN}"
                                    },
                                    {
                                        "name": "MYSQL_AIO",
                                        "value": "${MYSQL_AIO}"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "${APPLICATION_NAME}-mysql-pvol",
                                "persistentVolumeClaim": {
                                    "claimName": "${APPLICATION_NAME}-mysql-claim"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "${APPLICATION_NAME}-mysql-claim",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        }
    ]
}
